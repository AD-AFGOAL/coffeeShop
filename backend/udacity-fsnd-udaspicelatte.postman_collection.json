{
	"info": {
		"_postman_id": "a958746e-ff17-4342-bb3b-128cde2571ff",
		"name": "udacity-fsnd-udaspicelatte",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "22927372"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks-detail"
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": "{{host}}/drinks/1"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/drinks/1"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IktPSUdmeVk0Z0toMTZ2YWJ3RnZTTiJ9.eyJpc3MiOiJodHRwczovL2Rldi1ydXF1eWR1ai51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMyMjViZDU2ODViZTdiNzM2ZTgzYWZkIiwiYXVkIjoiY29mZmVlIiwiaWF0IjoxNjYzMTk2MTMwLCJleHAiOjE2NjMyNjgxMzAsImF6cCI6InJFTFRid3JydVBoTHAxVEtmUkhUVkxHOHMwcUpFOXhLIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6W119.jCasvILEcshrCqFSAUYILmf_YE9wPsfhQmVcdwCvDfFG6-ilJB5nPq2O50ffjdUAmCRDLBMSKzhcdcBlpcKtQwufhcmj2KaHQk1dcJ5P5uklnCO__cz_M4kJFfD_gLaIpfMFWLCCDpzmFXw7BVXvV1T-POFh1TRPVFpYMmssQ4ckaJca0M_EJFHcmrq9nq6D21mei9o_erw1623G8N7Og4f69Jd7IuzmEz6sOLOjAU8v9EJUVZ1OhTlslMxPpFCDjaTvtKt4oty0OtZrREwHFBYKoI0DbSrJUMSFUhVCYfGnovIG3YVhqs0rhC0n0nq1tXK4RkpatYND-cFM5oQsxQ"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks-detail"
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": "{{host}}/drinks/1"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/drinks/1"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InhfTERfVEVaMFZudW1TVDA1MWdWdSJ9.eyJpc3MiOiJodHRwczovL2Rldi1vZW43emttNC51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTUxMTMxMzI2NDg1OTgxODg2MDQiLCJhdWQiOiJjb2ZmZWVTaG9wIiwiaWF0IjoxNjYzMjYzMzgxLCJleHAiOjE2NjMzNDk3ODEsImF6cCI6ImxXQ29HRndXRHBHNElWaVpScmk4bkVmZlM4Y3NvanNSIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiXX0.adjBkMTRrQ-tbl4Zx0qVq5kzxhkWg26I9g5VcvQ1m_GLnf6TIiJeh7KPYfef6XdrhXmEyfC1Qdu498Zl85S9HPzrAkePxVQ4723VTcI3bIkZb3sg0cCAEow3t-iZZquVrVfWlWHSfDS2rjgPZqfG4R3ZkToRIIlA_U1oBnulQauzh3LfCoIdARamNtmx32zhKa-nCCAeindSxyX6bYf1m5zkeAwiaR6Icnj2hNqjg7K_5jej8c8YBTFnmfT1H9cK-Efhg-uIxi6vlXaookxaMxpiAqO1v00ECuqpZPb-cSRoo1xZEoD17ulLLWo5Yn7YC91qLeu5LuNwulRO_KHehw"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/drinks-detail"
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Water3\",\n    \"recipe\": {\n        \"name\": \"Water\",\n        \"color\": \"blue\",\n        \"parts\": 1\n    }\n}"
						},
						"url": "{{host}}/drinks"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Water5\"\n}"
						},
						"url": "{{host}}/drinks/1"
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/drinks/1"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InhfTERfVEVaMFZudW1TVDA1MWdWdSJ9.eyJpc3MiOiJodHRwczovL2Rldi1vZW43emttNC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMxMWRjNDE5ZWNmYmYxOTU3YWE3OWJhIiwiYXVkIjoiY29mZmVlU2hvcCIsImlhdCI6MTY2MzI2MzEyNSwiZXhwIjoxNjYzMzQ5NTI1LCJhenAiOiJsV0NvR0Z3V0RwRzRJVmlaUnJpOG5FZmZTOGNzb2pzUiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.Z4uCvntOEBM1J8vQeemuPOSbMB1v2aXukrh0BKoIBiQ1jwQyvgygO4PBYI_0vphEvVmYF4ltlaEq5nC07YJTyEDfL412n3jtO6QJXHwr2vCKu6MhE2aPysulKtAOwX0KOMLRB4Ck0RtaNxVl1ClKJq3vx_CR6LoiRPmO68CWKawhZdx5g1gkUq6lGEST9D4E2ZHY1DbG3lkjzWnsG5430fKeOBgkCIkgDEVa3wo5aUgtMBcukOcRbcQRYbhOALqUCCVXzboKjUTtUjYMZrN2zQ-fMvgb6sq9z1LyfTKMdmL7CxjFc3PMmyAFyxl_WxbzNTtjmBDw_vBhhgoLskij0Q"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}